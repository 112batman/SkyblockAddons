import groovy.json.*

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'io.franzbecker:gradle-lombok:3.3.0'
    }
}

apply plugin: 'io.franzbecker.gradle-lombok'
apply plugin: 'net.minecraftforge.gradle.forge'

group= "codes.biscuit.skyblockaddons"
archivesBaseName = "SkyblockAddons"
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"

    mappings = "stable_22"

    // Replace placeholders in source code
    replace("@VERSION@": project.version, "@UPDATE_JSON@": updateJSON)
    replaceIn("SkyblockAddons.java")
}

jar {
    archiveName = archivesBaseName + "-" + minecraft.version + "-" + version + ".jar"

    manifest.attributes(
            'Main-Class': 'OpenErrorMessage',
            'FMLCorePlugin': 'codes.biscuit.skyblockaddons.tweaker.SkyblockAddonsLoadingPlugin',
            "ForceLoadAsMod": true,
            'FMLCorePluginContainsFMLMod': true,
            'ModSide': 'CLIENT',
            'FMLAT': 'skyblockaddons_at.cfg'
    )

}

configurations {
    provided
    compile.extendsFrom(provided)
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'litemod.json'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'litemod.json'
    }
}

// If you're in a dev environment, you need to run this task before running Minecraft.
task processResourcesDev(type: Copy) {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'litemod.json'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'litemod.json'
    }
    into sourceSets.main.java.outputDir
}

// Updates the version JSON file automatically when the version changes
// Don't forget to write the changelog! Those aren't automatic.
task updateVersionsFile {
    def versionsFile = new File("resources/versions/dev-versions.json")

    def jsonBuilder = new JsonBuilder(new JsonSlurper().parse(versionsFile))
    def versionsMap = jsonBuilder.content."1.8.9"

    jsonBuilder.content.promos."1.8.9-latest" = version.toString()

    // Update the versions list if it doesn't have the current version.
    if (!versionsMap.containsKey(version)) {
        versionsMap.put(version, "<Insert Changelog Here>")
        versionsMap = versionsMap.sort(Comparator.reverseOrder())
        jsonBuilder.content."1.8.9" = versionsMap
    }

    versionsFile.write(jsonBuilder.toPrettyString())
}

tasks.build.dependsOn(updateVersionsFile)

//reobf { // Only for labymod client.
//    jar {
//        useNotchSrg()
//    }
//}